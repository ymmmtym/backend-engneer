{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Engneer Tutorial This site describes the technology and knowledge for engneer.","title":"Home"},{"location":"#welcome-to-engneer-tutorial","text":"This site describes the technology and knowledge for engneer.","title":"Welcome to Engneer Tutorial"},{"location":"backend/docker/","text":"Docker Install for centos Install docker sudo yum -y update sudo yum -y install git docker docker-compose sudo groupadd docker sudo gpasswd -a ${USER} docker sudo systemctl restart docker Init setting delete sudo authority for docker cmd sudo groupadd docker sudo gpasswd -a ${USER} docker Commands copy docker cp -r ${container_id}:${input} ${output} run with mounting volumes docker run -v /home/hoge/shared:/shared -d -it ubuntu /bin/bash show <none> images docker images -f \"dangling=true\" build with tag docker build -t ${USER}/${tagname} . delete docker container prune docker volume prune docker image prune docker network prune docker system prune --volumes tag docker pull ${USER}/${image} docker tag ${USER}/${image} ${USER}/${image}:${tag} docker push ${USER}/${image}:${tag} Terraform Use docker image docker run -it -v $PWD:/app -w /app hashicorp/terraform apply Dockerhub puth image to dockerhub connect to github setting automated build Dockerfile default directory is / If workdir not exist, created automatelly.","title":"Docker"},{"location":"backend/docker/#docker","text":"","title":"Docker"},{"location":"backend/docker/#install-for-centos","text":"Install docker sudo yum -y update sudo yum -y install git docker docker-compose sudo groupadd docker sudo gpasswd -a ${USER} docker sudo systemctl restart docker","title":"Install for centos"},{"location":"backend/docker/#init-setting","text":"delete sudo authority for docker cmd sudo groupadd docker sudo gpasswd -a ${USER} docker","title":"Init setting"},{"location":"backend/docker/#commands","text":"copy docker cp -r ${container_id}:${input} ${output} run with mounting volumes docker run -v /home/hoge/shared:/shared -d -it ubuntu /bin/bash show <none> images docker images -f \"dangling=true\" build with tag docker build -t ${USER}/${tagname} . delete docker container prune docker volume prune docker image prune docker network prune docker system prune --volumes tag docker pull ${USER}/${image} docker tag ${USER}/${image} ${USER}/${image}:${tag} docker push ${USER}/${image}:${tag}","title":"Commands"},{"location":"backend/docker/#terraform","text":"Use docker image docker run -it -v $PWD:/app -w /app hashicorp/terraform apply","title":"Terraform"},{"location":"backend/docker/#dockerhub","text":"puth image to dockerhub connect to github setting automated build","title":"Dockerhub"},{"location":"backend/docker/#dockerfile","text":"default directory is / If workdir not exist, created automatelly.","title":"Dockerfile"},{"location":"backend/git/","text":"Git branch model gitlab-flow master(default\u3001\u6b63\u5e38\u6027\u78ba\u8a8d) feature/hotfix pre-production(\u691c\u8a3c\u74b0\u5883) production opetation init git checkout master git branch production git push -u origin production commit git checkout master git pull git checkout -b feature/hoge git add . git commit -m \"${commit_msg}\" git push origin feature/hoge git checkout master git branch -d feature/hoge # same procedure for hotfix edit commit git reset --hard HEAD^ git rebase -i ${commit_id} https://www.google.com/amp/s/www.tam-tam.co.jp/tipsnote/program/post16686.html/amp","title":"Git"},{"location":"backend/git/#git","text":"","title":"Git"},{"location":"backend/git/#branch-model","text":"gitlab-flow master(default\u3001\u6b63\u5e38\u6027\u78ba\u8a8d) feature/hotfix pre-production(\u691c\u8a3c\u74b0\u5883) production","title":"branch model"},{"location":"backend/git/#opetation","text":"","title":"opetation"},{"location":"backend/git/#init","text":"git checkout master git branch production git push -u origin production","title":"init"},{"location":"backend/git/#commit","text":"git checkout master git pull git checkout -b feature/hoge git add . git commit -m \"${commit_msg}\" git push origin feature/hoge git checkout master git branch -d feature/hoge # same procedure for hotfix","title":"commit"},{"location":"backend/git/#edit-commit","text":"git reset --hard HEAD^ git rebase -i ${commit_id} https://www.google.com/amp/s/www.tam-tam.co.jp/tipsnote/program/post16686.html/amp","title":"edit commit"},{"location":"backend/linux/","text":"Linux Makefile ex) makemigrations: docker-compose run --rm web python3 manage.py makemigrations migrate: docker-compose run --rm web python3 manage.py migrate createsuperuser: docker-compose run --rm web python3 manage.py createsuperuser VM init for CentOS 7 Copy private key from local machine scp ~/.ssh/id_rsa ${target_machine}:~/.ssh/ setting swap sudo dd if=/dev/zero of=/swapfile bs=1M count=1024 sudo chmod 600 /swapfile sudo mkswap /swapfile sudo swapon /swapfile sudo sed -i '$ a /swapfile swap swap defaults 0 0' /etc/fstab update yum repository sudo yum update Commands dmidecode show hardware info dmidecode grep without reg exspression grep -F 'hoge' sample.txt fgrep 'hoge' sample.txt vim start diff mode vimdiff # or vim -d commands do # diff obtain dp # diff put :wqa # save all and finish :xa # save all and finish tree tree --charset=C less less +F README.md LICENSE # ^C general mode # F monitoring mode # :n move next file diff diff <($cmd1) <($cmd2) find find . -name \".sh\" -type f exec chmod 755 {} + mdfind for MacOS command. mdfind -onlyin . \".md\"","title":"Linux"},{"location":"backend/linux/#linux","text":"","title":"Linux"},{"location":"backend/linux/#makefile","text":"ex) makemigrations: docker-compose run --rm web python3 manage.py makemigrations migrate: docker-compose run --rm web python3 manage.py migrate createsuperuser: docker-compose run --rm web python3 manage.py createsuperuser","title":"Makefile"},{"location":"backend/linux/#vm-init-for-centos-7","text":"","title":"VM init for CentOS 7"},{"location":"backend/linux/#copy-private-key-from-local-machine","text":"scp ~/.ssh/id_rsa ${target_machine}:~/.ssh/","title":"Copy private key from local machine"},{"location":"backend/linux/#setting-swap","text":"sudo dd if=/dev/zero of=/swapfile bs=1M count=1024 sudo chmod 600 /swapfile sudo mkswap /swapfile sudo swapon /swapfile sudo sed -i '$ a /swapfile swap swap defaults 0 0' /etc/fstab","title":"setting swap"},{"location":"backend/linux/#update-yum-repository","text":"sudo yum update","title":"update yum repository"},{"location":"backend/linux/#commands","text":"dmidecode show hardware info dmidecode grep without reg exspression grep -F 'hoge' sample.txt fgrep 'hoge' sample.txt vim start diff mode vimdiff # or vim -d commands do # diff obtain dp # diff put :wqa # save all and finish :xa # save all and finish tree tree --charset=C less less +F README.md LICENSE # ^C general mode # F monitoring mode # :n move next file diff diff <($cmd1) <($cmd2) find find . -name \".sh\" -type f exec chmod 755 {} + mdfind for MacOS command. mdfind -onlyin . \".md\"","title":"Commands"},{"location":"backend/openstack/","text":"Openstack show uploaded image list openstack image list cinder image-list create user openstack user create opcel openstack user set --password secret opcel openstack project create proj01 openstack role add --user opcel --project proj01 member","title":"Openstack"},{"location":"backend/openstack/#openstack","text":"","title":"Openstack"},{"location":"backend/openstack/#show-uploaded-image-list","text":"openstack image list cinder image-list","title":"show uploaded image list"},{"location":"backend/openstack/#create-user","text":"openstack user create opcel openstack user set --password secret opcel openstack project create proj01 openstack role add --user opcel --project proj01 member","title":"create user"},{"location":"backend/python/","text":"python roles of __init__.py show directory has python script initialize when import modules Modules future apply to ver2,3 from __future__ import division, print_function, absolute_import, unicode_literals","title":"Python"},{"location":"backend/python/#python","text":"","title":"python"},{"location":"backend/python/#roles-of-__init__py","text":"show directory has python script initialize when import modules","title":"roles of __init__.py"},{"location":"backend/python/#modules","text":"future apply to ver2,3 from __future__ import division, print_function, absolute_import, unicode_literals","title":"Modules"},{"location":"frontend/javascript/","text":"JavaScript es6 \u30a2\u30ed\u30fc\u95a2\u6570 \u5b9a\u6570\u306e\u30b9\u30b3\u30fc\u30d7 \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306eoverride \u30c7\u30d5\u30a9\u30eb\u30c8\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3001\u540d\u524d\u4ed8\u304d\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 forEach,find,filter,map\u30e1\u30bd\u30c3\u30c9 \u5909\u6570\u5ba3\u8a00\u306e\u7a2e\u985e javascript\u306b\u304a\u3051\u308b\u5909\u6570\u5ba3\u8a00\u306e\u65b9\u6cd5\u306f\u4ee5\u4e0b\u306e3\u3064 var let const var var hoge_var = 10; var hoge_var = 100; //\u518d\u5ba3\u8a00\u53ef\u80fd hoge_var = 1000; //\u518d\u4ee3\u5165\u53ef\u80fd let let hoge_let = 20; let hoge_let = 200; //\u518d\u5ba3\u8a00\u3067\u304d\u306a\u3044 hoge_let = 2000; //\u518d\u4ee3\u5165\u53ef\u80fd const const test_const = 30; const test_const = 300; //\u518d\u5ba3\u8a00\u3067\u304d\u306a\u3044 test_const = 3000; //\u518d\u4ee3\u5165\u3067\u304d\u306a\u3044 \u30b9\u30b3\u30fc\u30d7 \u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570 \u30ed\u30fc\u30ab\u30eb\u5909\u6570 \u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570 \u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306f\u3069\u3053\u304b\u3089\u3067\u3082\u30a2\u30af\u30bb\u30b9\u3067\u304d\u3066\u3057\u307e\u3046\u306e\u3067\u3001 \u4ed6\u306e\u5909\u6570\u3068\u306e\u7af6\u5408\u3092\u5f15\u304d\u8d77\u3053\u3057\u3084\u3059\u3044\u3002 \u305d\u306e\u70ba\u3001\u30a8\u30e9\u30fc\u306b\u306a\u3063\u305f\u308a\u60f3\u5b9a\u901a\u308a\u306e\u51fa\u529b\u304c\u3055\u308c\u306a\u3044\u5834\u5408\u304c\u3042\u308b\u3002 \u30ed\u30fc\u30ab\u30eb\u5909\u6570 for\u6587\u3084\u95a2\u6570\u306e\u4e2d\u3060\u3051\u3067\u4f7f\u3046\u5909\u6570","title":"JavaScript"},{"location":"frontend/javascript/#javascript","text":"","title":"JavaScript"},{"location":"frontend/javascript/#es6","text":"\u30a2\u30ed\u30fc\u95a2\u6570 \u5b9a\u6570\u306e\u30b9\u30b3\u30fc\u30d7 \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306eoverride \u30c7\u30d5\u30a9\u30eb\u30c8\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3001\u540d\u524d\u4ed8\u304d\u30a8\u30af\u30b9\u30dd\u30fc\u30c8 forEach,find,filter,map\u30e1\u30bd\u30c3\u30c9","title":"es6"},{"location":"frontend/javascript/#_1","text":"javascript\u306b\u304a\u3051\u308b\u5909\u6570\u5ba3\u8a00\u306e\u65b9\u6cd5\u306f\u4ee5\u4e0b\u306e3\u3064 var let const","title":"\u5909\u6570\u5ba3\u8a00\u306e\u7a2e\u985e"},{"location":"frontend/javascript/#var","text":"var hoge_var = 10; var hoge_var = 100; //\u518d\u5ba3\u8a00\u53ef\u80fd hoge_var = 1000; //\u518d\u4ee3\u5165\u53ef\u80fd","title":"var"},{"location":"frontend/javascript/#let","text":"let hoge_let = 20; let hoge_let = 200; //\u518d\u5ba3\u8a00\u3067\u304d\u306a\u3044 hoge_let = 2000; //\u518d\u4ee3\u5165\u53ef\u80fd","title":"let"},{"location":"frontend/javascript/#const","text":"const test_const = 30; const test_const = 300; //\u518d\u5ba3\u8a00\u3067\u304d\u306a\u3044 test_const = 3000; //\u518d\u4ee3\u5165\u3067\u304d\u306a\u3044","title":"const"},{"location":"frontend/javascript/#_2","text":"\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570 \u30ed\u30fc\u30ab\u30eb\u5909\u6570","title":"\u30b9\u30b3\u30fc\u30d7"},{"location":"frontend/javascript/#_3","text":"\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306f\u3069\u3053\u304b\u3089\u3067\u3082\u30a2\u30af\u30bb\u30b9\u3067\u304d\u3066\u3057\u307e\u3046\u306e\u3067\u3001 \u4ed6\u306e\u5909\u6570\u3068\u306e\u7af6\u5408\u3092\u5f15\u304d\u8d77\u3053\u3057\u3084\u3059\u3044\u3002 \u305d\u306e\u70ba\u3001\u30a8\u30e9\u30fc\u306b\u306a\u3063\u305f\u308a\u60f3\u5b9a\u901a\u308a\u306e\u51fa\u529b\u304c\u3055\u308c\u306a\u3044\u5834\u5408\u304c\u3042\u308b\u3002","title":"\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570"},{"location":"frontend/javascript/#_4","text":"for\u6587\u3084\u95a2\u6570\u306e\u4e2d\u3060\u3051\u3067\u4f7f\u3046\u5909\u6570","title":"\u30ed\u30fc\u30ab\u30eb\u5909\u6570"},{"location":"infra/juniper/","text":"Juniper Commands show chassis environment show configuration interfaces lo0 | display set show interfaces diagnostics optics ${port}","title":"Juniper"},{"location":"infra/juniper/#juniper","text":"","title":"Juniper"},{"location":"infra/juniper/#commands","text":"show chassis environment show configuration interfaces lo0 | display set show interfaces diagnostics optics ${port}","title":"Commands"}]}