{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Backend Engneer Site This site describes the technology and knowledge for backend engneer.","title":"Home"},{"location":"#welcome-to-backend-engneer-site","text":"This site describes the technology and knowledge for backend engneer.","title":"Welcome to Backend Engneer Site"},{"location":"backend/docker/","text":"Docker Install for centos Install docker sudo yum -y update sudo yum -y install git docker docker-compose sudo groupadd docker sudo gpasswd -a ${USER} docker sudo systemctl restart docker Init setting delete sudo authority for docker cmd sudo groupadd docker sudo gpasswd -a ${USER} docker Commands copy docker cp -r ${container_id}:${input} ${output} run with mounting volumes docker run -v /home/hoge/shared:/shared -d -it ubuntu /bin/bash show <none> images docker images -f \"dangling=true\" build with tag docker build -t ${USER}/${tagname} . delete docker container prune docker volume prune docker image prune docker network prune docker system prune --volumes tag docker pull ${USER}/${image} docker tag ${USER}/${image} ${USER}/${image}:${tag} docker push ${USER}/${image}:${tag} Terraform Use docker image docker run -it -v $PWD:/app -w /app hashicorp/terraform apply Dockerhub puth image to dockerhub connect to github setting automated build Dockerfile default directory is / If workdir not exist, created automatelly.","title":"Docker"},{"location":"backend/docker/#docker","text":"","title":"Docker"},{"location":"backend/docker/#install-for-centos","text":"Install docker sudo yum -y update sudo yum -y install git docker docker-compose sudo groupadd docker sudo gpasswd -a ${USER} docker sudo systemctl restart docker","title":"Install for centos"},{"location":"backend/docker/#init-setting","text":"delete sudo authority for docker cmd sudo groupadd docker sudo gpasswd -a ${USER} docker","title":"Init setting"},{"location":"backend/docker/#commands","text":"copy docker cp -r ${container_id}:${input} ${output} run with mounting volumes docker run -v /home/hoge/shared:/shared -d -it ubuntu /bin/bash show <none> images docker images -f \"dangling=true\" build with tag docker build -t ${USER}/${tagname} . delete docker container prune docker volume prune docker image prune docker network prune docker system prune --volumes tag docker pull ${USER}/${image} docker tag ${USER}/${image} ${USER}/${image}:${tag} docker push ${USER}/${image}:${tag}","title":"Commands"},{"location":"backend/docker/#terraform","text":"Use docker image docker run -it -v $PWD:/app -w /app hashicorp/terraform apply","title":"Terraform"},{"location":"backend/docker/#dockerhub","text":"puth image to dockerhub connect to github setting automated build","title":"Dockerhub"},{"location":"backend/docker/#dockerfile","text":"default directory is / If workdir not exist, created automatelly.","title":"Dockerfile"},{"location":"backend/git/","text":"Git branch model gitlab-flow master(default\u3001\u6b63\u5e38\u6027\u78ba\u8a8d) feature/hotfix pre-production(\u691c\u8a3c\u74b0\u5883) production opetation init git checkout master git branch production git push -u origin production commit git checkout master git pull git checkout -b feature/hoge git add . git commit -m \"${commit_msg}\" git push origin feature/hoge git checkout master git branch -d feature/hoge # same procedure for hotfix edit commit git reset --hard HEAD^ git rebase -i ${commit_id} https://www.google.com/amp/s/www.tam-tam.co.jp/tipsnote/program/post16686.html/amp","title":"Git"},{"location":"backend/git/#git","text":"","title":"Git"},{"location":"backend/git/#branch-model","text":"gitlab-flow master(default\u3001\u6b63\u5e38\u6027\u78ba\u8a8d) feature/hotfix pre-production(\u691c\u8a3c\u74b0\u5883) production","title":"branch model"},{"location":"backend/git/#opetation","text":"","title":"opetation"},{"location":"backend/git/#init","text":"git checkout master git branch production git push -u origin production","title":"init"},{"location":"backend/git/#commit","text":"git checkout master git pull git checkout -b feature/hoge git add . git commit -m \"${commit_msg}\" git push origin feature/hoge git checkout master git branch -d feature/hoge # same procedure for hotfix","title":"commit"},{"location":"backend/git/#edit-commit","text":"git reset --hard HEAD^ git rebase -i ${commit_id} https://www.google.com/amp/s/www.tam-tam.co.jp/tipsnote/program/post16686.html/amp","title":"edit commit"},{"location":"backend/linux/","text":"Linux Makefile ex) makemigrations: docker-compose run --rm web python3 manage.py makemigrations migrate: docker-compose run --rm web python3 manage.py migrate createsuperuser: docker-compose run --rm web python3 manage.py createsuperuser VM init for CentOS 7 Copy private key from local machine scp ~/.ssh/id_rsa ${target_machine}:~/.ssh/ setting swap sudo dd if=/dev/zero of=/swapfile bs=1M count=1024 sudo chmod 600 /swapfile sudo mkswap /swapfile sudo swapon /swapfile sudo sed -i '$ a /swapfile swap swap defaults 0 0' /etc/fstab update yum repository sudo yum update Commands dmidecode show hardware info dmidecode grep without reg exspression grep -F 'hoge' sample.txt fgrep 'hoge' sample.txt vim start diff mode vimdiff # or vim -d commands do # diff obtain dp # diff put :wqa # save all and finish :xa # save all and finish tree tree --charset=C less less +F README.md LICENSE # ^C general mode # F monitoring mode # :n move next file diff diff <($cmd1) <($cmd2) find find . -name \".sh\" -type f exec chmod 755 {} + mdfind for MacOS command. mdfind -onlyin . \".md\"","title":"Linux"},{"location":"backend/linux/#linux","text":"","title":"Linux"},{"location":"backend/linux/#makefile","text":"ex) makemigrations: docker-compose run --rm web python3 manage.py makemigrations migrate: docker-compose run --rm web python3 manage.py migrate createsuperuser: docker-compose run --rm web python3 manage.py createsuperuser","title":"Makefile"},{"location":"backend/linux/#vm-init-for-centos-7","text":"","title":"VM init for CentOS 7"},{"location":"backend/linux/#copy-private-key-from-local-machine","text":"scp ~/.ssh/id_rsa ${target_machine}:~/.ssh/","title":"Copy private key from local machine"},{"location":"backend/linux/#setting-swap","text":"sudo dd if=/dev/zero of=/swapfile bs=1M count=1024 sudo chmod 600 /swapfile sudo mkswap /swapfile sudo swapon /swapfile sudo sed -i '$ a /swapfile swap swap defaults 0 0' /etc/fstab","title":"setting swap"},{"location":"backend/linux/#update-yum-repository","text":"sudo yum update","title":"update yum repository"},{"location":"backend/linux/#commands","text":"dmidecode show hardware info dmidecode grep without reg exspression grep -F 'hoge' sample.txt fgrep 'hoge' sample.txt vim start diff mode vimdiff # or vim -d commands do # diff obtain dp # diff put :wqa # save all and finish :xa # save all and finish tree tree --charset=C less less +F README.md LICENSE # ^C general mode # F monitoring mode # :n move next file diff diff <($cmd1) <($cmd2) find find . -name \".sh\" -type f exec chmod 755 {} + mdfind for MacOS command. mdfind -onlyin . \".md\"","title":"Commands"},{"location":"backend/openstack/","text":"Openstack show uploaded image list openstack image list cinder image-list create user openstack user create opcel openstack user set --password secret opcel openstack project create proj01 openstack role add --user opcel --project proj01 member","title":"Openstack"},{"location":"backend/openstack/#openstack","text":"","title":"Openstack"},{"location":"backend/openstack/#show-uploaded-image-list","text":"openstack image list cinder image-list","title":"show uploaded image list"},{"location":"backend/openstack/#create-user","text":"openstack user create opcel openstack user set --password secret opcel openstack project create proj01 openstack role add --user opcel --project proj01 member","title":"create user"},{"location":"backend/python/","text":"python roles of __init__.py show directory has python script initialize when import modules Modules future apply to ver2,3 from __future__ import division, print_function, absolute_import, unicode_literals","title":"Python"},{"location":"backend/python/#python","text":"","title":"python"},{"location":"backend/python/#roles-of-__init__py","text":"show directory has python script initialize when import modules","title":"roles of __init__.py"},{"location":"backend/python/#modules","text":"future apply to ver2,3 from __future__ import division, print_function, absolute_import, unicode_literals","title":"Modules"}]}