{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Backend Engneer Site This site describes the technology and knowledge for backend engneer.","title":"Home"},{"location":"#welcome-to-backend-engneer-site","text":"This site describes the technology and knowledge for backend engneer.","title":"Welcome to Backend Engneer Site"},{"location":"docker/","text":"Docker install for centos sudo yum -y update sudo yum -y install git docker docker-compose sudo groupadd docker sudo gpasswd -a ${USER} docker sudo systemctl restart docker init setting delete sudo authority for docker cmd sudo groupadd docker sudo gpasswd -a $USER docker exit Commands copy docker cp ${container_id}:${dir} ${output_dir} prune unused containers and images docker system prune run with mounting volumes docker run -v /home/hoge/shared:/shared -d -i -t ubuntu /bin/bash show <none> images docker images -f \"dangling=true\" build with tag docker build -t ${USER}/${tagname} . delete docker container prune docker volume prune docker image prune docker network prune docker system prune --volumes tag docker pull ${USER}/image docker tag ${USER}/image ${USER}/image:1.0 docker push ${USER}/image:1.0 terraform docker run -it -v $PWD:/app -w /app hashicorp/terraform apply dockerhub If the github repository has Dockerfile, the image automatelly is built on dockerhub WORKDIR default is / If workdir not exist, created automatelly.","title":"Docker"},{"location":"docker/#docker","text":"","title":"Docker"},{"location":"docker/#install-for-centos","text":"sudo yum -y update sudo yum -y install git docker docker-compose sudo groupadd docker sudo gpasswd -a ${USER} docker sudo systemctl restart docker","title":"install for centos"},{"location":"docker/#init-setting","text":"delete sudo authority for docker cmd sudo groupadd docker sudo gpasswd -a $USER docker exit","title":"init setting"},{"location":"docker/#commands","text":"copy docker cp ${container_id}:${dir} ${output_dir} prune unused containers and images docker system prune run with mounting volumes docker run -v /home/hoge/shared:/shared -d -i -t ubuntu /bin/bash show <none> images docker images -f \"dangling=true\" build with tag docker build -t ${USER}/${tagname} . delete docker container prune docker volume prune docker image prune docker network prune docker system prune --volumes tag docker pull ${USER}/image docker tag ${USER}/image ${USER}/image:1.0 docker push ${USER}/image:1.0","title":"Commands"},{"location":"docker/#terraform","text":"docker run -it -v $PWD:/app -w /app hashicorp/terraform apply","title":"terraform"},{"location":"docker/#dockerhub","text":"If the github repository has Dockerfile, the image automatelly is built on dockerhub","title":"dockerhub"},{"location":"docker/#workdir","text":"default is / If workdir not exist, created automatelly.","title":"WORKDIR"},{"location":"git/","text":"Git branch model gitlab-flow master(default\u3001\u6b63\u5e38\u6027\u78ba\u8a8d) feature/hotfix pre-production(\u691c\u8a3c\u74b0\u5883) production opetation init git checkout master git branch production git push -u origin production commit git checkout master git pull git checkout -b feature/hoge git add . git commit -m \"${commit_msg}\" git push origin feature/hoge git checkout master git branch -d feature/hoge # same procedure for hotfix edit commit git reset --hard HEAD^ git rebase -i ${commit_id} https://www.google.com/amp/s/www.tam-tam.co.jp/tipsnote/program/post16686.html/amp","title":"Git"},{"location":"git/#git","text":"","title":"Git"},{"location":"git/#branch-model","text":"gitlab-flow master(default\u3001\u6b63\u5e38\u6027\u78ba\u8a8d) feature/hotfix pre-production(\u691c\u8a3c\u74b0\u5883) production","title":"branch model"},{"location":"git/#opetation","text":"","title":"opetation"},{"location":"git/#init","text":"git checkout master git branch production git push -u origin production","title":"init"},{"location":"git/#commit","text":"git checkout master git pull git checkout -b feature/hoge git add . git commit -m \"${commit_msg}\" git push origin feature/hoge git checkout master git branch -d feature/hoge # same procedure for hotfix","title":"commit"},{"location":"git/#edit-commit","text":"git reset --hard HEAD^ git rebase -i ${commit_id} https://www.google.com/amp/s/www.tam-tam.co.jp/tipsnote/program/post16686.html/amp","title":"edit commit"},{"location":"linux/","text":"VM init for CentOS 7 local machine copy private key scp ~/.ssh/id_rsa ${target_machine}:~/.ssh/ VM (Cent OS) set swap sudo dd if=/dev/zero of=/swapfile bs=1M count=1024 sudo chmod 600 /swapfile sudo mkswap /swapfile sudo swapon /swapfile sudo sed -i '$ a /swapfile swap swap defaults 0 0' /etc/fstab update yum repository sudo yum update","title":"VM init for CentOS 7"},{"location":"linux/#vm-init-for-centos-7","text":"","title":"VM init for CentOS 7"},{"location":"linux/#local-machine","text":"","title":"local machine"},{"location":"linux/#copy-private-key","text":"scp ~/.ssh/id_rsa ${target_machine}:~/.ssh/","title":"copy private key"},{"location":"linux/#vm-cent-os","text":"","title":"VM (Cent OS)"},{"location":"linux/#set-swap","text":"sudo dd if=/dev/zero of=/swapfile bs=1M count=1024 sudo chmod 600 /swapfile sudo mkswap /swapfile sudo swapon /swapfile sudo sed -i '$ a /swapfile swap swap defaults 0 0' /etc/fstab","title":"set swap"},{"location":"linux/#update-yum-repository","text":"sudo yum update","title":"update yum repository"}]}